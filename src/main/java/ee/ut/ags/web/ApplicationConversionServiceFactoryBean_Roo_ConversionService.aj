// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.ut.ags.web;

import ee.ut.ags.domain.SimulationResult;
import ee.ut.ags.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<SimulationResult, String> ApplicationConversionServiceFactoryBean.getSimulationResultToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ee.ut.ags.domain.SimulationResult, java.lang.String>() {
            public String convert(SimulationResult simulationResult) {
                return new StringBuilder().append(simulationResult.getSomething()).append(' ').append(simulationResult.getEndTime()).toString();
            }
        };
    }
    
    public Converter<Long, SimulationResult> ApplicationConversionServiceFactoryBean.getIdToSimulationResultConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ee.ut.ags.domain.SimulationResult>() {
            public ee.ut.ags.domain.SimulationResult convert(java.lang.Long id) {
                return SimulationResult.findSimulationResult(id);
            }
        };
    }
    
    public Converter<String, SimulationResult> ApplicationConversionServiceFactoryBean.getStringToSimulationResultConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ee.ut.ags.domain.SimulationResult>() {
            public ee.ut.ags.domain.SimulationResult convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SimulationResult.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSimulationResultToStringConverter());
        registry.addConverter(getIdToSimulationResultConverter());
        registry.addConverter(getStringToSimulationResultConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
